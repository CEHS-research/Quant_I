levels = c(1, 2, 3),
labels = c("Program requirement",
"Personal interest",
"Advisor recommendation"))) %>%
dplyr::mutate(exp_condF = factor(exp_cond,
levels = c(1, 2, 3, 4),
labels = c("Easy",
"Moderate",
"Difficult",
"Impossible"))) %>%
dplyr::mutate(coffeeF = factor(coffee,
levels = c(0, 1),
labels = c("Not a regular coffee drinker",
"Regularly drinks coffee")))  %>%
dplyr::mutate(hr_base_bps = hr_base / 60) %>%
dplyr::mutate(anx_plus = rowsums(anx_base, anx_pre, anx_post)) %>%
dplyr::mutate(hr_avg = rowmeans(hr_base, hr_pre, hr_post)) %>%
dplyr::mutate(statDiff = statquiz - exp_sqz)
schizo <- data.frame(id = c(1:10),
yr_hos = c(5, 7, 12, 5, 11, 3, 7, 2, 9, 6),
ori_test = c(22, 26, 16, 20, 18, 30, 14, 24, 15, 19))
GRE <- data.frame(id = c(1:5),
verbalGRE_1 = c(540, 510, 580, 550, 520),
verbalGRE_2 = c(570, 520, 600, 530, 520))
test_scores <-  data.frame(id = c(1:12),
spatial = c(13, 32, 41, 26, 28, 12, 19, 33, 24, 46, 22, 17),
math = c(19, 25, 31, 18, 37, 16, 14, 28, 20, 39, 21, 15))
child_vars  <-  data.frame(child = c(1:8),
shoe = c(5.2, 4.7, 7.0, 5.8, 7.2, 6.9, 7.7, 8.0),
read = c(1.7, 1.5, 2.7, 3.1, 3.9, 4.5, 5.1, 7.4),
age = c(5, 6, 7, 8, 9, 10, 11, 12))
memory <- data.frame(id = c(1:9),
sound = c(8, 5, 6, 10, 3, 4, 7, 11, 9),
look = c(4, 5, 3, 11, 2, 6, 4, 6, 7))
schizo
# Pearson's r: yr_hos & ori_test
GRE
# Pearson's r: verbalGRE_1 & verbalGRE_2 --> ONE tail
# Pearson's r: verbalGRE_1 & verbalGRE_2 --> TWO tails
test_scores
# Linear model: y = math & x = spatial
# Linear model: y = spatial & x = math
child_vars
# Linear model: y = shoe & x = age
# Linear model: y = read & x = age
# create new variables --> save as: child_new
#child_new
# Pearson's r: shoe & read
# Pearson's r: shoe_resid & read_resid
GRE
# Paired t-test: verbalGRE1 & verbalGRE2
# Compute a new variable --> save as: child_new
# GRE_new
# 1-sample t test: pop mean of verbalGRE_diff = 0 (no difference)
memory
# Paired t-test: sound and look --> ONE tail
# Paired t-test: sound and look --> TWO tails
test_scores
# Pearson's r: spatial & math
# Paired t-test: spatial & math
# Scatterplot: phobia vs. statquiz
# Scatterplot: anx_base vs. anx_post
data_clean
# Scatterplot: anx_base vs. anx_post <-- restricting to anx_base of 29 and under
data_clean %>%
ggplot(aes(x = anx_base,
y = anx_post)) +
geom_point()
# Scatterplot: anx_base vs. anx_post <-- restricting to anx_base of 29 and under
data_clean %>%
dplyr::filter(anx_base <= 29) %>%
ggplot(aes(x = anx_base,
y = anx_post)) +
geom_point()
# Pearson's r: anx_base & anx_post
data_clean %>%
cor.test( ~ anx_base + anx_post,
data = .)
# Pearson's r: anx_base & anx_post <-- restricting to anx_base of 29 and under
data_clean %>%
dplyr::filter(anx_base <= 29) %>%
cor.test( ~ anx_base + anx_post,
data = .)
# Pearson's r: anx_mean, anx_base, anx_pre, & anx_post
data_clean %>%
dplyr::mutate(anx_mean = furniture::rowmeans(anx_base, anx_pre, anx_post))
# Pearson's r: anx_mean, anx_base, anx_pre, & anx_post
data_clean %>%
dplyr::mutate(anx_mean = furniture::rowmeans(anx_base, anx_pre, anx_post)) %>%
furniture::tableC(anx_mean, anx_base, anx_pre, anx_post)
# Pearson's r: verbalGRE_1 & verbalGRE_2 --> TWO tails
GRE %>%
cor.test( ~ verbalGRE_1 + verbalGRE_2,
data = .,
alternative = "two.sided")
# Pearson's r: verbalGRE_1 & verbalGRE_2 --> ONE tail
GRE %>%
cor.test( ~ verbalGRE_1 + verbalGRE_2,
data = .,
alternative = "greater")
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggpairs()
?ggpairs
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggpairs(upper = list(continous = "points"))
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggpairs(upper = list(continuous = "points"),
lower = list(continuous = "cor"))
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggpairs(columns = c(age, weighin),
upper = list(continuous = "points"),
lower = list(continuous = "cor"))
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"),
upper = list(continuous = "points"),
lower = list(continuous = "cor"))
cancer_clean %>%
data.frame %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"),
upper = list(continuous = "cor"),
lower = list(continuous = "points"))
cancer_clean %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"),
upper = list(continuous = "cor"),
lower = list(continuous = "points"))
cancer_clean %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"),
upper = list(continuous = "cor"),
lower = list(continuous = "smooth"))
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6)
?ggscatmat
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
as.matrix %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
as.matrix() %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
as.matrix()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat(.)
data(flea)
ggscatmat(flea)
ggscatmat(cancer_clean)
ggscatmat(cancer_clean,)
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6)
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
GGally::ggscatmat(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"))
cancer_clean
cancer_clean %>%
GGally::ggscatmat(columns = 3:4)
ggscatmat(cancer_clean, columns = 3:4)
# set global chunk options...
#  this changes the defaults so you don't have to repeat yourself
knitr::opts_chunk$set(comment     = NA,
cache       = TRUE,
echo        = TRUE,
warning     = FALSE,
message     = FALSE)
library(tidyverse)    # Loads several very helpful 'tidy' packages
library(haven)        # Read in SPSS datasets
library(psych)        # Lots of nice tid-bits
library(GGally)       # Extension to 'ggplot2' (ggpairs)
cancer_raw <- haven::read_spss("data/cancer.sav")
cancer_clean <- cancer_raw %>%
dplyr::rename_all(tolower) %>%
dplyr::mutate(id = factor(id)) %>%
dplyr::mutate(trt = factor(trt,
labels = c("Placebo",
"Aloe Juice"))) %>%
dplyr::mutate(stage = factor(stage))
cancer_clean %>%
dplyr::group_by(trt) %>%
furniture::table1(age, weighin, totalcin)
cancer_clean %>%
ggplot(aes(x = age,
y = weighin)) +
geom_point() +
geom_smooth(method = "lm")
cancer_clean %>%
cor.test(~ age + weighin,  # formula: order doesn't matter
data = .)         # data piped from above
cancer_clean %>%
cor.test(~ age + weighin,
data = .,
alternative = "two.sided",  # or "greater" (positive r) or "less" (negative r)
method = "pearson",          # or "kendall" (tau) or "spearman" (rho)
conf.level = .95)            # or .90 or .99 (ect)
cancer_clean %>%
ggplot(aes(x = totalcin,
y = totalcw4)) +
geom_point() +
geom_smooth(method = "lm")
cancer_clean %>%
cor.test(~ totalcin + totalcw4,
data = .)
cancer_clean %>%
ggplot(aes(x = totalcw4,
y = totalcw6)) +
geom_point() +
geom_smooth(method = "lm")
cancer_clean %>%
cor.test(~ totalcw4 + totalcw6,
data = .)
cancer_clean %>%
furniture::tableC(age, weighin, totalcin)
cancer_clean %>%
furniture::tableC(totalcin, totalcw2, totalcw4, totalcw6)
cancer_clean %>%
furniture::tableC(totalcin, totalcw2, totalcw4, totalcw6,
na.rm = TRUE)
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
pairs()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
psych::pairs.panels()
ggscatmat(cancer_clean, columns = 3:4)
ggscatmat(cancer_clean[, 3:4])
flea
flea
ffscatmat(flea[, 2:3])
ggscatmat(flea[, 2:3])
class(flea)
class(cancer_clean)
ggscatmat(cancer_clean[, 3:4] %>% data.frame)
cancer_clean[, 3:4] %>% data.frame %>% ggscatmat()
cancer_clean %>%
dplyr::select(age, weight) %>% data.frame %>% ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin) %>%
data.frame %>%
ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat()
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(color = trt)
cancer_clean
cancer_clean %>%
dplyr::select(age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(color = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(color = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(columns = c(age, weighin),
color = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(columns = c("age", "weighin"),
color = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(columns = c("age", "weighin"),
color = "trt",
fill = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(columns = c("age", "weighin"),
color = "trt")
cancer_clean %>%
dplyr::select(trt, age, weighin,
totalcin, totalcw2, totalcw4, totalcw6) %>%
data.frame %>%
ggscatmat(columns = c("age", "weighin",
"totalcin", "totalcw2", "totalcw4", "totalcw6"),
color = "trt")
cancer_clean %>%
data.frame() %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"),
upper = list(continuous = "cor"),
lower = list(continuous = "smooth"))
data(tips, package = "reshape")
pm <- ggpairs(tips)
pm
cancer_clean %>%
data.frame() %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"))
cancer_clean %>%
data.frame() %>%
GGally::ggpairs(columns = c("age", "weighin"),
columnLabels = c("Age at BL", "Weight at BL"))
cancer_clean %>%
data.frame()
tips
glimpse(tips)
class(tips)
??ggscatmat
cancer_clean %>%
cor.test(weighin ~ age,  # formula: order DOES matter
data = .)         # data piped from above
cancer_clean %>%
lm(weighin ~ age,  # formula: order DOES matter
data = .)         # data piped from above
cancer_clean %>%
lm(weighin ~ age,    # formula: order DOES matter
data = .) %>%     # data piped from above
summary()
cancer_clean %>%
ggplot(aes(x = age,
y = weighin)) +
geom_point() +
geom_smooth(method = "lm")
cancer_clean %>%
lm(age ~ weighin,    # formula: order DOES matter
data = .) %>%     # data piped from above
summary()
bookdown::render_book(c("index.Rmd",
"00-install.Rmd",
"01-prep.Rmd",
"02-plots.Rmd",
"03-summary.Rmd",
"04-normal.Rmd",
"05-assumptions.Rmd",
"06-t_test.Rmd",
"07-indepMeans.Rmd",
"08-power.Rmd",
"09-corr.Rmd",
"10-reg.Rmd",
"11-pairedMeans.Rmd",
"99-refs.Rmd"))
cancer_clean %>%
tidyr::gather(key = time,
value = verbalGRE,
verbalGRE_1, verbalGRE_2,
na.rm = FALSE) %>%
t.test(verbalGRE ~ time,
data = .,
paired = TRUE)
cancer_clean
# This dataset is in WIDE format
cancer_clean
# This dataset is in WIDE format: total oral condiditon is stored in 4 variables, side-by-side
cancer_clean %>%
dplyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE)
# This dataset is in WIDE format: total oral condiditon is stored in 4 variables, side-by-side
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE)
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE) %>%
t.test(totalc ~ time,
data = .,
paired = TRUE)
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE)
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE) %>%
t.test(totalc ~ time,
data = .,
paired = TRUE)
cancer_clean
cancer_clean
# This dataset is in LONG format: total oral condiditon (at weeks 2 & 6) is stored in 1 variable, stacked
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = FALSE)
# This dataset is in LONG format: total oral condiditon (at weeks 2 & 6) is stored in 1 variable, stacked
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = TRUE)
cancer_clean %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6,
na.rm = TRUE) %>%
t.test(totalc ~ time,
data = .,
paired = TRUE)
?t.test
cancer_clean %>%
t.test(x = totalcw2,
y = totalcw6)
cancer_clean %>%
t.test(x = totalcw2,
y = totalcw6,
data = .)
cancer_clean %>%
t.test(x = totalcw2,
y = totalcw6,
data = .)
cancer_clean %>%
t.test(x = .$totalcw2,
y = .$totalcw6,
data = .)
# This dataset is in LONG format: total oral condiditon (at weeks 2 & 6) is stored in 1 variable, stacked
cancer_clean %>%
dplyr::filter(complete.cases(totalcw2, totalcw6)) %>%
tidyr::gather(key = time,
value = totalc,
totalcw2, totalcw6)
# This dataset is in WIDE format: total oral condiditon is stored in 4 variables, side-by-side
cancer_clean %>%
dplyr::filter(complete.cases(totalcw2, totalcw6))
2073.23-165
9
9+(8*4)+(3*2)
+17
47+17
5953-3840
3.25*6+2.75*3+2.5*4
38*3
2.25*16
657.03+150+90+100+775.31
657.03+150+90+100+775.31+789.99
4656.86-3037.2
957-919
919-76
3180-800
440+1850
3912-2290
7345.65-6389.94
7375.65-6389.94
985.71-639.09
7375.65-5457
340+1850
3912-2190
